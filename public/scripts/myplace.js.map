{"version":3,"sources":["webpack://share-my-place/./src/UI/Map.ts","webpack://share-my-place/webpack/bootstrap","webpack://share-my-place/./src/myplace.ts"],"names":["coords","lat","lng","this","render","coordinates","google","map","maps","Map","document","getElementById","center","zoom","Marker","position","alert","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","queryParams","URL","location","href","searchParams","get","address","length","headerTitleEl","querySelector","textContent"],"mappings":"gHAKA,iBACE,WAAYA,GACNA,EAAOC,KAAOD,EAAOE,KACvBC,KAAKC,OAAOJ,GAkBlB,OAfE,YAAAI,OAAA,SAAOC,GACL,GAAKC,OAAL,CAIA,IAAMC,EAAM,IAAID,OAAOE,KAAKC,IAAIC,SAASC,eAAe,OAA0B,CAChFC,OAAQP,EACRQ,KAAM,KAGR,IAAIP,OAAOE,KAAKM,OAAO,CACrBC,SAAUV,EACVE,IAAKA,SAVLS,MAAM,0DAaZ,EArBA,GAAa,EAAAP,QCJTQ,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,S,WCrBf,aAWMG,EADM,IAAIC,IAAIC,SAASC,MACLC,aACpB7B,EAAS,KACb,GAAIyB,EAAa,CACf,IAAMxB,EAAMwB,EAAYK,IAAI,OACtB5B,EAAMuB,EAAYK,IAAI,OACxB7B,GAAOC,IACTF,EAAS,CACPC,KAAMA,EACNC,KAAMA,IAIZ,IAAM6B,EAAUN,EAAYK,IAAI,YAC5BC,aAAO,EAAPA,EAASC,SAAUhC,GAAQ,IArB7B,SAAYK,EAA8B0B,GACxC,IAAI,EAAAtB,IAAIJ,GACR,IAAM4B,EAAgBvB,SAASwB,cAAc,aACzCD,IAAeA,EAAcE,YAAcJ,GAkBpB,CAAgB/B,EAAQ+B,G","file":"scripts/myplace.js","sourcesContent":["export type GMapCoordinates = {\r\n  lat: number;\r\n  lng: number;\r\n}\r\n\r\nexport class Map {\r\n  constructor(coords: GMapCoordinates) {\r\n    if (coords.lat && coords.lng) {\r\n      this.render(coords);\r\n    }\r\n  }\r\n  render(coordinates: any) {\r\n    if (!google) {\r\n      alert('Could not load maps library - please try again later!');\r\n      return;\r\n    }\r\n    const map = new google.maps.Map(document.getElementById('map') as HTMLDivElement, {\r\n      center: coordinates,\r\n      zoom: 16\r\n    });\r\n\r\n    new google.maps.Marker({\r\n      position: coordinates,\r\n      map: map\r\n    })\r\n  }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Map, GMapCoordinates } from './UI/Map';\r\n\r\nclass LoadedPlace {\r\n  constructor(coordinates: GMapCoordinates, address: string) {\r\n    new Map(coordinates);\r\n    const headerTitleEl = document.querySelector('header h1');\r\n    if (headerTitleEl) headerTitleEl.textContent = address;\r\n  }\r\n}\r\n\r\nconst url = new URL(location.href);\r\nconst queryParams = url.searchParams;\r\nlet coords = null;\r\nif (queryParams) {\r\n  const lat = queryParams.get('lat');\r\n  const lng = queryParams.get('lng');\r\n  if (lat && lng)\r\n    coords = {\r\n      lat: +lat,\r\n      lng: +lng\r\n    };\r\n}\r\n\r\nconst address = queryParams.get('address');\r\nif (address?.length && coords) new LoadedPlace(coords, address);"],"sourceRoot":""}