{"version":3,"sources":["webpack://share-my-place/./src/UI/Map.ts","webpack://share-my-place/./src/UI/Modal.ts","webpack://share-my-place/./src/Utility/Location.ts","webpack://share-my-place/./src/main.ts","webpack://share-my-place/webpack/bootstrap","webpack://share-my-place/webpack/startup"],"names":["coords","lat","lng","this","render","coordinates","google","map","maps","Map","document","getElementById","center","zoom","Marker","position","alert","contentId","fallbackText","contentTemplateEl","modalTemplateEl","show","createElement","modalElements","importNode","content","modalElement","querySelector","backdropElement","contentElement","appendChild","body","insertAdjacentElement","hide","remove","Modal","GOOGLE_API_KEY","fetch","response","ok","Error","json","data","error_message","results","formatted_address","address","urlAddress","encodeURI","geometry","location","locateUserHandler","navigator","geolocation","modal","getCurrentPosition","successResult","latitude","longitude","getAddressFromCoords","selectPlace","error","addressForm","locateUserBtn","shareBtn","addEventListener","findAddresHandler","bind","sharePlaceHandler","sharedLinkInputElement","clipboard","writeText","value","then","catch","console","log","select","disabled","origin","event","target","preventDefault","form","trim","length","getCoordsFromAddress","message","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"mappings":"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","file":"scripts/main.js","sourcesContent":["export type GMapCoordinates = {\r\n  lat: number;\r\n  lng: number;\r\n}\r\n\r\nexport class Map {\r\n  constructor(coords: GMapCoordinates) {\r\n    if (coords.lat && coords.lng) {\r\n      this.render(coords);\r\n    }\r\n  }\r\n  render(coordinates: any) {\r\n    if (!google) {\r\n      alert('Could not load maps library - please try again later!');\r\n      return;\r\n    }\r\n    const map = new google.maps.Map(document.getElementById('map') as HTMLDivElement, {\r\n      center: coordinates,\r\n      zoom: 16\r\n    });\r\n\r\n    new google.maps.Marker({\r\n      position: coordinates,\r\n      map: map\r\n    })\r\n  }\r\n}","export class Modal {\r\n  fallbackText: string;\r\n  contentTemplateEl: HTMLTemplateElement;\r\n  modalTemplateEl: HTMLTemplateElement;\r\n  modalElement: any;\r\n  backdropElement: any;\r\n\r\n  constructor(contentId: string, fallbackText: string) {\r\n    this.fallbackText = fallbackText;\r\n    this.contentTemplateEl = document.getElementById(contentId) as HTMLTemplateElement;\r\n    this.modalTemplateEl = document.getElementById('modal-template') as HTMLTemplateElement;\r\n  }\r\n\r\n  show() {\r\n    if ('content' in document.createElement('template')) {\r\n      const modalElements = document.importNode(this.modalTemplateEl.content, true);\r\n      this.modalElement = modalElements.querySelector('.modal') as HTMLDivElement;\r\n      this.backdropElement = modalElements.querySelector('.backdrop') as HTMLDivElement;\r\n      const contentElement = document.importNode(this.contentTemplateEl.content, true);\r\n\r\n      this.modalElement.appendChild(contentElement);\r\n\r\n      document.body.insertAdjacentElement('afterbegin', this.modalElement);\r\n      document.body.insertAdjacentElement('afterbegin', this.backdropElement);\r\n    } else {\r\n      // fallback code\r\n      alert(this.fallbackText);\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    if (this.modalElement) {\r\n      this.modalElement.remove();\r\n      this.backdropElement.remove();\r\n      this.modalElement = null;\r\n      this.backdropElement = null;\r\n    }\r\n  }\r\n}","const GOOGLE_API_KEY = 'AIzaSyCAeuDpenuPeYVTHVmOjhDyw27S3sVxhg4';\r\n\r\nexport async function getAddressFromCoords(coords: { lat: number, lng: number }) {\r\n  const response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${coords.lat},${coords.lng}&key=${GOOGLE_API_KEY}`);\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch address. Please try again!');\r\n  }\r\n  const data = await response.json();\r\n  if (data.error_message) {\r\n    throw new Error(data.error_message);\r\n  }\r\n  const address = data.results[0].formatted_address;\r\n  return address;\r\n}\r\n\r\nexport async function getCoordsFromAddress(address: string) {\r\n  const urlAddress = encodeURI(address);\r\n  const response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${urlAddress}&key=${GOOGLE_API_KEY}`);\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch coordinates. Please try again!');\r\n  }\r\n  const data = await response.json();\r\n  if (data.error_message) {\r\n    throw new Error(data.error_message);\r\n  }\r\n  const coordinates = data.results[0].geometry.location;\r\n  return coordinates;\r\n}","import { Modal } from './UI/Modal';\r\nimport { Map, GMapCoordinates } from './UI/Map';\r\nimport { getCoordsFromAddress, getAddressFromCoords } from './Utility/Location';\r\n\r\nclass PlaceFinder {\r\n  shareBtn: HTMLButtonElement;\r\n  map: any;\r\n  constructor() {\r\n    const addressForm = document.querySelector('form') as HTMLFormElement;\r\n    const locateUserBtn = document.getElementById('locate-btn') as HTMLButtonElement;\r\n    this.shareBtn = document.getElementById('share-btn') as HTMLButtonElement;\r\n\r\n    addressForm.addEventListener('submit', this.findAddresHandler.bind(this));\r\n    locateUserBtn.addEventListener('click', this.locateUserHandler.bind(this));\r\n    this.shareBtn.addEventListener('click', this.sharePlaceHandler);\r\n  }\r\n\r\n  sharePlaceHandler() {\r\n    const sharedLinkInputElement = document.getElementById('share-link') as HTMLInputElement;\r\n    if (!(navigator.clipboard) && sharedLinkInputElement) {\r\n      sharedLinkInputElement.select();\r\n      return;\r\n    }\r\n\r\n    navigator.clipboard.writeText(sharedLinkInputElement.value).\r\n      then(() => {\r\n        alert('Copied into clipboard!');\r\n      }).catch((error) => {\r\n        console.log(error);\r\n        sharedLinkInputElement.select();\r\n      });\r\n  }\r\n\r\n  selectPlace(coordinates: GMapCoordinates, address: string) {\r\n    if (this.map) {\r\n      this.map.render(coordinates);\r\n    }\r\n    else {\r\n      this.map = new Map(coordinates);\r\n    }\r\n    this.shareBtn.disabled = false;\r\n    const sharedLinkInputElement = document.getElementById('share-link') as HTMLInputElement;\r\n    sharedLinkInputElement.value = `${location.origin}/myplace?address=${encodeURI(address)}&lat=${coordinates.lat}&lng=${coordinates.lng}`;\r\n  }\r\n\r\n  locateUserHandler = () => {\r\n    if (!navigator.geolocation) {\r\n      alert('Location feature is not available in your browser - please use a more modern browser or manually enter an address.');\r\n      return;\r\n    }\r\n    const modal = new Modal('loading-modal-content', 'Loading location - please wait');\r\n    modal.show();\r\n    navigator.geolocation.getCurrentPosition(async successResult => {\r\n\r\n      const coordinates: GMapCoordinates = {\r\n        lat: successResult.coords.latitude,\r\n        lng: successResult.coords.longitude,\r\n      };\r\n      const address = await getAddressFromCoords(coordinates);\r\n      modal.hide();\r\n      this.selectPlace(coordinates, address);\r\n    }, error => {\r\n      modal.hide();\r\n      alert('Could not locate you unfortunately. Plese, enter an address manually!' + '\\n' + error);\r\n    })\r\n  }\r\n\r\n  async findAddresHandler(event: Event) {\r\n    if (event.target) {\r\n      event.preventDefault();\r\n      const form = event.target as HTMLFormElement;\r\n      const address = form.querySelector('input')?.value as string;\r\n      if (!address || address.trim().length === 0) {\r\n        alert('Invalid address entered - please try again!');\r\n        return;\r\n      }\r\n      const modal = new Modal('loading-modal-content', 'Loading location, please wait.');\r\n      modal.show();\r\n      try {\r\n        const coordinates = await getCoordsFromAddress(address);\r\n        this.selectPlace(coordinates, address);\r\n      } catch (error) {\r\n        alert(error.message);\r\n      }\r\n      modal.hide();\r\n    }\r\n  }\r\n}\r\nnew PlaceFinder();","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(519);\n"],"sourceRoot":""}